{"version":3,"file":"static/js/75.5535e78f.chunk.js","mappings":"mNAMe,SAASA,EAAOC,GAE7B,MAAMC,EAAYD,EAAME,KAAOF,EAAME,KAAO,GACtCC,EAASH,EAAMG,OACfC,EAAYJ,EAAMI,UAClBC,EAAQL,EAAMK,MACdC,EAAWN,EAAMM,SACjBC,EAAQP,EAAMO,MACdC,EAAOR,EAAMQ,KAGbC,GAAYC,EAAAA,EAAAA,QAAO,OAClBR,EAAMS,IAAWC,EAAAA,EAAAA,UAASX,IAC1BY,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CACnCT,OAAQC,EAAYW,KAAKC,IAAIZ,EAAWD,GAASA,EACjDE,MAAOC,EAAWS,KAAKC,IAAIV,EAAUD,GAASA,EAC9CE,MAAOA,KAITU,EAAAA,EAAAA,YAAU,KACRC,IAAAA,MAAQT,EAAUU,QAASjB,EAAMW,EAAO,GACvC,CAACX,EAAMW,KAIVI,EAAAA,EAAAA,YAAU,KACJT,GACFG,EAAQT,EAAKkB,KAAIC,IAAA,IAAC,EAAEC,EAAC,EAAEC,GAAGF,EAAA,MAAM,CAACC,IAAGC,IAAGf,KAAMA,EAAK,IACpD,GACC,CAACA,IAGJ,MAAMgB,EAAeA,KACnBV,EAAU,IACLD,EACHV,OAAQC,EAAYW,KAAKC,IAAIZ,EAAWK,EAAUU,QAAQM,cAAgBhB,EAAUU,QAAQM,aAC5FpB,MAAOC,EAAWS,KAAKC,IAAIV,EAAUG,EAAUU,QAAQO,aAAejB,EAAUU,QAAQO,aACxF,EAkBJ,OAbAT,EAAAA,EAAAA,YAAU,KAERC,IAAAA,QAAUT,EAAUU,QAASjB,EAAMW,GAGnCc,OAAOC,iBAAiB,SAAUJ,GAG3B,KACLG,OAAOE,oBAAoB,SAAUL,EAAa,IAEnD,KAGDM,EAAAA,EAAAA,KAAA,OAAKC,IAAKtB,EAAWuB,MAAO,CAAEC,OAAQ,QAE1C,CCxDe,SAASC,IACtB,MAAOhC,EAAMS,IAAWC,EAAAA,EAAAA,UACtB,CAAC,CACAU,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,OAInB,OACEY,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFP,EAAAA,EAAAA,KAAA,KAAAO,SAAG,sFACHP,EAAAA,EAAAA,KAAC/B,EAAM,CACLG,KAAMA,EACNK,MAAO,YACPC,KAAM,SAERsB,EAAAA,EAAAA,KAAC/B,EAAM,CACLG,KAAMA,EACNK,MAAO,gBACPC,KAAM,cAId,C","sources":["components/plotly/Plotly.js","pages/DemoPlotly.js"],"sourcesContent":["// react\nimport { useState, useEffect, useRef } from \"react\";\n\n// plotly\nimport P from \"plotly.js-dist\";\n\nexport default function Plotly(props) {\n  // unpack props\n  const propsData = props.data ? props.data : [];\n  const height = props.height;\n  const maxHeight = props.maxHeight;\n  const width = props.width;\n  const maxWidth = props.maxWidth;\n  const title = props.title;\n  const type = props.type;\n\n  // plotly variables\n  const plotlyRef = useRef(null);\n  const [data, setData] = useState(propsData)\n  const [layout, setLayout] = useState({\n    height: maxHeight ? Math.min(maxHeight, height): height,\n    width: maxWidth ? Math.min(maxWidth, width) : width,\n    title: title,\n  });\n\n  // refresh plotly on data or layout change (layout width || height)\n  useEffect(() => {\n    P.react(plotlyRef.current, data, layout);\n  }, [data, layout]);\n\n  // inject type into data if type props used\n  // !!! disabled eslint, because data used to set itself !!!\n  useEffect(() => {\n    if (type) {\n      setData(data.map(({ x, y }) => ({x, y, type: type})));\n    }\n  }, [type]); // eslint-disable-line\n\n  // resize handler on window.resize\n  const handleResize = () => {\n    setLayout({\n      ...layout,\n      height: maxHeight ? Math.min(maxHeight, plotlyRef.current.clientHeight) : plotlyRef.current.clientHeight,\n      width: maxWidth ? Math.min(maxWidth, plotlyRef.current.clientWidth) : plotlyRef.current.clientWidth,\n    });\n  };\n\n  // initialize plotly and resize events\n  // !!! disabled eslint, because only initial data state needed to initialize plotly !!!\n  useEffect(() => {\n    // initialize plotly\n    P.newPlot(plotlyRef.current, data, layout);\n\n    // set size handler\n    window.addEventListener(\"resize\", handleResize);\n\n    // clean event handlers\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // eslint-disable-line\n\n  return (\n    <div ref={plotlyRef} style={{ margin: \"3px\" }} />\n  );\n};\n","// react\nimport { useState } from \"react\";\n\n// mui\nimport { Box } from \"@mui/material\";\n\n// plotly\nimport Plotly from \"../components/plotly/Plotly.js\";\n\nexport default function DemoPlotlyPage() {\n  const [data, setData] = useState(\n    [{\n\t    x: [1, 2, 3, 4, 5],\n\t    y: [1, 2, 4, 8, 16]\n    }]\n  );\n\n  return (\n    <Box>\n      <p>Plotly React component supports multiple independent instances at the same time.</p>\n      <Plotly\n        data={data}\n        title={\"Bar Graph\"}\n        type={\"bar\"}\n      />\n      <Plotly\n        data={data}\n        title={\"Scatter Graph\"}\n        type={\"scatter\"}\n      />\n    </Box>\n  )\n};\n"],"names":["Plotly","props","propsData","data","height","maxHeight","width","maxWidth","title","type","plotlyRef","useRef","setData","useState","layout","setLayout","Math","min","useEffect","P","current","map","_ref","x","y","handleResize","clientHeight","clientWidth","window","addEventListener","removeEventListener","_jsx","ref","style","margin","DemoPlotlyPage","_jsxs","Box","children"],"sourceRoot":""}