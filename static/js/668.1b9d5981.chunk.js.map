{"version":3,"file":"static/js/668.1b9d5981.chunk.js","mappings":"6LAMe,SAASA,EAAOC,GAE7B,MAAMC,EAAOD,EAAMC,KACbC,EAASF,EAAME,OACfC,EAAYH,EAAMG,UAClBC,EAAQJ,EAAMI,MACdC,EAAWL,EAAMK,SACjBC,EAAQN,EAAMM,MAGdC,GAAYC,EAAAA,EAAAA,QAAO,OAClBC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CACnCT,OAAQC,EAAYS,KAAKC,IAAIV,EAAWD,GAASA,EACjDE,MAAOC,EAAWO,KAAKC,IAAIR,EAAUD,GAASA,EAC9CE,MAAOA,EACPQ,aAAc,mBACdC,cAAe,sBAIjBC,EAAAA,EAAAA,YAAU,KACRC,IAAAA,MAAQV,EAAUW,QAAS,CAACjB,GAAOQ,EAAO,GACzC,CAACR,EAAMQ,IAGV,MAAMU,EAAeA,KACnBT,EAAU,IACLD,EACHP,OAAQC,EAAYS,KAAKC,IAAIV,EAAWI,EAAUW,QAAQE,cAAgBb,EAAUW,QAAQE,aAC5FhB,MAAOC,EAAWO,KAAKC,IAAIR,EAAUE,EAAUW,QAAQG,aAAed,EAAUW,QAAQG,aACxF,EAkBJ,OAbAL,EAAAA,EAAAA,YAAU,KAERC,IAAAA,QAAUV,EAAUW,QAAS,CAACjB,GAAOQ,GAGrCa,OAAOC,iBAAiB,SAAUJ,GAG3B,KACLG,OAAOE,oBAAoB,SAAUL,EAAa,IAEnD,KAGDM,EAAAA,EAAAA,KAAA,OAAKC,IAAKnB,EAAWoB,MAAO,CAAEC,OAAQ,QAE1C,C,2FChDe,SAASC,IACtB,MAAO5B,EAAM6B,IAAWnB,EAAAA,EAAAA,UACtB,CACCoB,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,IACfC,KAAM,QAIV,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFX,EAAAA,EAAAA,KAAA,KAAAW,SAAG,sFACHX,EAAAA,EAAAA,KAAC1B,EAAAA,EAAM,CACLE,KAAMA,EACNK,MAAO,gBAIf,C","sources":["components/plotly/Plotly.js","pages/DemoPlotly.js"],"sourcesContent":["// react\nimport { useState, useEffect, useRef } from \"react\";\n\n// plotly\nimport P from \"plotly.js-dist\";\n\nexport default function Plotly(props) {\n  // unpack props\n  const data = props.data;\n  const height = props.height;\n  const maxHeight = props.maxHeight;\n  const width = props.width;\n  const maxWidth = props.maxWidth;\n  const title = props.title;\n\n  // plotly variables\n  const plotlyRef = useRef(null);\n  const [layout, setLayout] = useState({\n    height: maxHeight ? Math.min(maxHeight, height): height,\n    width: maxWidth ? Math.min(maxWidth, width) : width,\n    title: title,\n    plot_bgcolor: \"rgba(0, 0, 0, 0)\",\n    paper_bgcolor: \"rgba(0, 0, 0, 0)\",\n  });\n\n  // refresh plotly on data or layout change (layout width || height)\n  useEffect(() => {\n    P.react(plotlyRef.current, [data], layout);\n  }, [data, layout]);\n\n  // resize handler on window.resize\n  const handleResize = () => {\n    setLayout({\n      ...layout,\n      height: maxHeight ? Math.min(maxHeight, plotlyRef.current.clientHeight) : plotlyRef.current.clientHeight,\n      width: maxWidth ? Math.min(maxWidth, plotlyRef.current.clientWidth) : plotlyRef.current.clientWidth,\n    });\n  };\n\n  // initialize plotly and resize events\n  // !!! disabled eslint, because only initial data state needed to initialize plotly !!!\n  useEffect(() => {\n    // initialize plotly\n    P.newPlot(plotlyRef.current, [data], layout);\n\n    // set size handler\n    window.addEventListener(\"resize\", handleResize);\n\n    // clean event handlers\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // eslint-disable-line\n\n  return (\n    <div ref={plotlyRef} style={{ margin: \"3px\" }} />\n  );\n};\n","// react\nimport { useState } from \"react\";\n\n// mui\nimport { Box } from \"@mui/material\";\n\n// plotly\nimport Plotly from \"../components/plotly/Plotly.js\";\n\nexport default function DemoPlotlyPage() {\n  const [data, setData] = useState(\n    {\n\t    x: [1, 2, 3, 4, 5],\n\t    y: [1, 2, 4, 8, 16],\n      type: \"bar\"\n    }\n  );\n\n  return (\n    <Box>\n      <p>Plotly React component supports multiple independent instances at the same time.</p>\n      <Plotly\n        data={data}\n        title={\"Bar Graph\"}\n      />\n    </Box>\n  )\n};\n"],"names":["Plotly","props","data","height","maxHeight","width","maxWidth","title","plotlyRef","useRef","layout","setLayout","useState","Math","min","plot_bgcolor","paper_bgcolor","useEffect","P","current","handleResize","clientHeight","clientWidth","window","addEventListener","removeEventListener","_jsx","ref","style","margin","DemoPlotlyPage","setData","x","y","type","_jsxs","Box","children"],"sourceRoot":""}